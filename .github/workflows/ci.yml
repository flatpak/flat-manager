on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install dependencies
        run: sudo apt-get install -y libostree-dev
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install dependencies
        run: sudo apt-get install -y libostree-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test

  end-to-end:
    name: End-to-end upload test
    runs-on: ubuntu-22.04
    steps:
     - uses: actions/checkout@v2

     - name: Start containers
       working-directory: ./tests
       run: docker compose up -d

     - name: Wait for the containers to finish loading
       run: sleep 10

     - name: Run test
       working-directory: ./tests
       run: docker compose exec flat-manager ./tests/run-test.py

  fmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Install dependencies
        run: sudo apt-get install -y libostree-dev
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/flatpak/flat-manager:${{ github.sha }}
            ghcr.io/flatpak/flat-manager:latest
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
